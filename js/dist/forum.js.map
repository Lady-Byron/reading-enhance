{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@lady-byron/reading-enhance-js/webpack/bootstrap","webpack://@lady-byron/reading-enhance-js/webpack/runtime/compat get default export","webpack://@lady-byron/reading-enhance-js/webpack/runtime/define property getters","webpack://@lady-byron/reading-enhance-js/webpack/runtime/hasOwnProperty shorthand","webpack://@lady-byron/reading-enhance-js/external root \"flarum.core.compat['forum/app']\"","webpack://@lady-byron/reading-enhance-js/external root \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@lady-byron/reading-enhance-js/external root \"flarum.core.compat['forum/components/PostStream']\"","webpack://@lady-byron/reading-enhance-js/external root \"flarum.core.compat['common/extend']\"","webpack://@lady-byron/reading-enhance-js/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostStream'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","import app from 'flarum/forum/app';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport PostStream from 'flarum/forum/components/PostStream';\nimport { extend, override } from 'flarum/common/extend';\n\nfunction hasExplicitTarget(): boolean {\n  const near = (m.route.param && m.route.param('near')) || null;\n  const hash = (typeof window !== 'undefined' && window.location.hash) || '';\n  return !!near || /^#p\\d+$/i.test(hash);\n}\n\nfunction extractTopFullyVisiblePostNumber(): number | null {\n  const items = document.querySelectorAll<HTMLElement>('.PostStream-item[data-number]');\n  for (const el of Array.from(items)) {\n    const rect = el.getBoundingClientRect();\n    if (rect.top >= 0 && rect.bottom <= (window.innerHeight || 0)) {\n      const n = parseInt(el.dataset.number || '', 10);\n      if (n > 0) return n;\n    }\n  }\n  return null;\n}\n\nfunction savePosition(discussionId: string, postNumber: number) {\n  return app\n    .request({\n      method: 'POST',\n      // ✅ 新路由：不带路径参数\n      url: `${app.forum.attribute('apiUrl')}/ladybyron/reading-position`,\n      body: { discussionId, postNumber },\n    })\n    .catch(() => {});\n}\n\napp.initializers.add('lady-byron/reading-enhance', () => {\n  // 进入帖子：若无显式 URL/near，则用书签位覆盖初始定位\n  extend(DiscussionPage.prototype, 'oncreate', function () {\n    if (!app.session.user) return;\n    const discussion = (this as any).discussion;\n    const recorded: number | null = discussion?.attribute('lbReadingPosition') ?? null;\n    if (!hasExplicitTarget() && recorded && (this as any).stream) {\n      requestAnimationFrame(() => (this as any).stream.goToNumber(recorded));\n    }\n  });\n\n  // 利用 PostStream 的节流回调落库（覆盖但尊重原回调）\n  override(DiscussionPage.prototype, 'view', function (original: any, ...args: any[]) {\n    const vdom = original(...args);\n\n    const inject = (node: any) => {\n      if (!node) return;\n      if (Array.isArray(node)) return node.forEach(inject);\n      if (node.children) inject(node.children);\n\n      if (node.tag === PostStream) {\n        node.attrs = node.attrs || {};\n\n        const prev = node.attrs.onPositionChange;\n        node.attrs.onPositionChange = (...cbArgs: any[]) => {\n          if (typeof prev === 'function') prev(...cbArgs);\n          if (!app.session.user) return;\n          const dp = this as any;\n          const discussion = dp?.discussion;\n          if (!discussion) return;\n\n          const n = extractTopFullyVisiblePostNumber();\n          if (n && typeof n === 'number') {\n            savePosition(discussion.id(), n).then(() => {\n              if (discussion.attribute('lbReadingPosition') !== n) {\n                discussion.pushAttributes({ lbReadingPosition: n });\n              }\n            });\n          }\n        };\n\n        const discussion = (this as any).discussion;\n        const recorded: number | null = discussion?.attribute('lbReadingPosition') ?? null;\n        if (!hasExplicitTarget() && recorded) {\n          node.attrs.targetPost = recorded;\n        }\n      }\n    };\n\n    inject(vdom);\n    return vdom;\n  });\n});\n\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","hasExplicitTarget","near","m","route","param","hash","window","location","test","app","add","extend","DiscussionPage","_discussion$attribute","_this","user","discussion","this","recorded","attribute","stream","requestAnimationFrame","goToNumber","override","original","_this2","_len","arguments","length","args","Array","_key","vdom","apply","inject","node","isArray","forEach","children","tag","PostStream","_discussion$attribute2","attrs","prev","onPositionChange","discussionId","postNumber","n","items","document","querySelectorAll","_i","_Array$from","from","el","rect","getBoundingClientRect","top","bottom","innerHeight","parseInt","dataset","number","extractTopFullyVisiblePostNumber","id","method","url","body","then","pushAttributes","lbReadingPosition","targetPost"],"sourceRoot":""}